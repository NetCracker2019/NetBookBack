saveUser = \
  INSERT INTO person (login, passw, person_name, mail, avatar_filepath, sex, country, city, description, activity, turn_on_notif, reg_date, role_id, min_refresh_date) \
  VALUES (:login, :passw, :person_name, :mail, :avatar_filepath, :sex, :country, :city, :description, :activity, :turn_on_notif, :reg_date, :role_id, :min_refresh_date)

findByUserId = \
  SELECT person_id, login, passw, person_name, mail, avatar_filepath, sex, country, city, description, activity, turn_on_notif, reg_date, role_id, min_refresh_date \
  FROM person WHERE person_id = :person_id

isExistByLogin = \
  SELECT * \
  FROM person WHERE login = :login

isExistByMail = \
  SELECT * \
  FROM person WHERE mail = :mail

findByLogin = \
  SELECT person_id, login, passw, person_name, mail, avatar_filepath, sex, country, city, description, activity, turn_on_notif, reg_date, role_id, min_refresh_date \
  FROM person \
  WHERE login = :login

getUserIdByName = \
  select person_id from person where person_name = :userName;

getUserIdByLogin = \
  select person_id from person where login = :userName;

getAllUsers = \
  SELECT person_id, login, passw, person_name, mail, avatar_filepath, sex, country, city, description, activity, turn_on_notif, reg_date, role_id, min_refresh_date \
  FROM person

findUserByEmail = \
  SELECT person_id, login, passw, person_name, mail, avatar_filepath, sex, country, city, description, activity, turn_on_notif, reg_date, role_id, min_refresh_date \
  FROM person WHERE mail = :mail
  
removeUserById = \
  DELETE FROM person \
  WHERE person_id = :person_id
  
activateUser = \
  UPDATE person \
  SET activity=true WHERE person_id = :person_id
  
deActivateUser = \
  UPDATE person \
  SET activity=false WHERE person_id = :person_id
  
  
updateUser = \
  UPDATE person \
  set passw = :passw, person_name = :person_name, mail = :mail, avatar_filepath = :avatar_filepath, sex = :sex, country = :country, city = :city, description = :description, activity = :activity, turn_on_notif = :turn_on_notif, reg_date = :reg_date, role_id = :role_id, min_refresh_date = :min_refresh_date \
  WHERE login = :login

updateUserById = \
  UPDATE person \
  set login = :login, passw = :passw, person_name = :person_name, mail = :mail, avatar_filepath = :avatar_filepath, sex = :sex, country = :country, city = :city, description = :description, activity = :activity, turn_on_notif = :turn_on_notif, reg_date = :reg_date, min_refresh_date = :min_refresh_date \
  WHERE person_id = :person_id
  
setMinRefreshDate = \
  UPDATE person \
  SET min_refresh_date=:min_refresh_date WHERE login = :login

getFriendsByLogin = \
  SELECT login, person_name, avatar_filepath \
  from person inner join friends on friends.user_id = :id and person.person_id = friends.friend_id \
  order by person_name \
  offset (:offset * :cnt) rows \
  fetch first :cnt row only;

getPersonsBySought = \
  SELECT login, person_name, avatar_filepath \
  from person \
  where person_name like :sought or login like :sought \
  order by person_name \
  offset (:offset * :cnt) rows \
  fetch first :cnt row only;

getClientPersonsBySought = \
  SELECT login, person_name, avatar_filepath \
  from person \
  where (person_name like :sought or login like :sought) \
  and role_id = 4\
  order by person_name \
  offset (:offset * :cnt) rows \
  fetch first :cnt row only;

getFriendsBySought = \
  SELECT login, person_name, avatar_filepath \
  from person inner join friends on friends.user_id = :id and person.person_id = friends.friend_id \
  where person_name like :sought or login like :sought \
  order by person_name \
  offset (:offset * :cnt) rows \
  fetch first :cnt row only;


getUserRole = \
  SELECT role_id FROM person WHERE login = :login

getCountPersonsBySought = \
  SELECT count(login)\
  from person \
  where person_name like :sought or login like :sought

getCountFriendsBySought = \
  SELECT count(login) \
  from person inner join friends on friends.user_id = :id and person.person_id = friends.friend_id \
  where person_name like :sought or login like :sought

addFriend = \
  INSERT INTO friends (user_id, friend_id) \
  VALUES (:ownId, :friendId)

isFriend = \
  SELECT count(user_id) \
  FROM friends \
  WHERE :ownId = user_id and friend_id = :friendId

deleteFriend = \
  DELETE FROM friends \
  WHERE :ownId = user_id and friend_id = :friendId

updateUserBookList = \
  UPDATE user_book \
  SET reading = :reading, favourite = :favourite \
  WHERE user_id = :user_id and book_id = :book_id

removeBookFromBookList = \
  DELETE FROM user_book \
  WHERE user_id = :user_id and book_id = :book_id
