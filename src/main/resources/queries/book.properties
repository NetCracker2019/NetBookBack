
getFavouriteBooksByUserId = \
  SELECT title, likes, image_path, authors  \
  FROM view_book_list INNER JOIN user_book \
  ON user_book.book_id = view_book_list.book_id \
  WHERE user_id = :user_id and favourite = true \
  order by title \
  offset (:offset * :cnt) rows \
  fetch first :cnt row only;

getReadingBooksByUserId = \
  SELECT title, likes, image_path, authors  \
  FROM view_book_list INNER JOIN user_book \
  ON user_book.book_id = view_book_list.book_id \
  WHERE user_id = :user_id and reading = true \
  order by title \
  offset (:offset * :cnt) rows \
  fetch first :cnt row only;

getReadBooksByUserId = \
  SELECT title, likes, image_path, authors  \
  FROM view_book_list INNER JOIN user_book \
  ON user_book.book_id = view_book_list.book_id \
  WHERE user_id = :user_id and reading = false \
  order by title \
  offset (:offset * :cnt) rows \
  fetch first :cnt row only;

getAllBooks = SELECT * FROM view_book_list

addNewAnnouncement = z

findBooksByTitleOrAuthor = select * from view_book_list \
  WHERE lower(title) like :titleOrAuthor \
  or EXISTS (SELECT FROM  unnest(authors) \
  author WHERE  lower(author) LIKE :titleOrAuthor) and approved = true;

getBookById = select * from view_book_list where book_id = :id and approved = true;

getReviewsByBookId = select r.review_id r_id, \
    r.user_id u_id, r.book_id b_id, p.person_name u_name, p.avatar_filepath av_path, \
    r.review_text r_text, r.rating rating, r.approved appr from review r \
    inner join person p on r.user_id = p.person_id \
    where r.book_id = :bookId and r.approved = true;

getReviewPeaceByBookId = select r.review_id r_id, \
    r.user_id u_id, r.book_id b_id, p.person_name u_name, p.avatar_filepath av_path, \
    r.review_text r_text, r.rating rating, r.approved appr from review r \
    inner join person p on r.user_id = p.person_id \
    where r.book_id = :bookId and r.approved = true \
    order by r_id \
    limit :count offset :offset;

getPeaceOfSearchBooks = select * from view_book_list \
  WHERE lower(title) like :titleOrAuthor \
  or EXISTS (SELECT FROM  unnest(authors) \
  author WHERE  lower(author) LIKE :titleOrAuthor) and approved = true \
  order by title \
  limit :count offset :offset;

getPeaceOfBooks = select * from view_book_list \
  where approved = true \
  order by title \
  limit :count offset :offset

countBooks = select count(*) from view_book_list;

